{"version":3,"file":"patient.js","sourceRoot":"","sources":["../../src/types/patient.ts"],"names":[],"mappings":";;;AAAA,6BAAwB;AAExB,kBAAkB;AACL,QAAA,aAAa,GAAG,OAAC,CAAC,MAAM,CAAC;IACpC,EAAE,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,IAAI,EAAE;IACrB,GAAG,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,wBAAwB;IAChD,SAAS,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAC5B,QAAQ,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAC3B,WAAW,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,qBAAqB,CAAC;IACpD,MAAM,EAAE,OAAC,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;IACtD,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC,QAAQ,EAAE;IACpC,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;IAC5B,OAAO,EAAE,OAAC,CAAC,MAAM,CAAC;QAChB,MAAM,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;QAC7B,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;QAC3B,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;QAC5B,OAAO,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;QAC9B,OAAO,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;KAC/B,CAAC,CAAC,QAAQ,EAAE;IACb,gBAAgB,EAAE,OAAC,CAAC,MAAM,CAAC;QACzB,IAAI,EAAE,OAAC,CAAC,MAAM,EAAE;QAChB,YAAY,EAAE,OAAC,CAAC,MAAM,EAAE;QACxB,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE;KAClB,CAAC,CAAC,QAAQ,EAAE;IACb,aAAa,EAAE,OAAC,CAAC,MAAM,CAAC;QACtB,QAAQ,EAAE,OAAC,CAAC,MAAM,EAAE;QACpB,YAAY,EAAE,OAAC,CAAC,MAAM,EAAE;QACxB,WAAW,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;KACnC,CAAC,CAAC,QAAQ,EAAE;IACb,SAAS,EAAE,OAAC,CAAC,KAAK,CAAC,OAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IACzC,WAAW,EAAE,OAAC,CAAC,KAAK,CAAC,OAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IAC3C,UAAU,EAAE,OAAC,CAAC,KAAK,CAAC,OAAC,CAAC,MAAM,EAAE,CAAC,CAAC,QAAQ,EAAE;IAC1C,SAAS,EAAE,OAAC,CAAC,MAAM,EAAE;IACrB,SAAS,EAAE,OAAC,CAAC,MAAM,EAAE;IACrB,SAAS,EAAE,OAAC,CAAC,MAAM,EAAE,EAAE,qCAAqC;IAC5D,cAAc,EAAE,OAAC,CAAC,MAAM,EAAE,EAAE,gCAAgC;CAC7D,CAAC,CAAC;AAEU,QAAA,mBAAmB,GAAG,OAAC,CAAC,MAAM,CAAC;IAC1C,KAAK,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,2BAA2B;IACrD,KAAK,EAAE,OAAC,CAAC,KAAK,CAAC,CAAC,OAAC,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC;IAChG,SAAS,EAAE,OAAC,CAAC,MAAM,EAAE,CAAC,QAAQ,EAAE;CACjC,CAAC,CAAC;AAEU,QAAA,mBAAmB,GAAG,qBAAa,CAAC,IAAI,CAAC;IACpD,EAAE,EAAE,IAAI;IACR,SAAS,EAAE,IAAI;IACf,SAAS,EAAE,IAAI;IACf,SAAS,EAAE,IAAI;IACf,cAAc,EAAE,IAAI;CACrB,CAAC,CAAC;AAEU,QAAA,mBAAmB,GAAG,2BAAmB,CAAC,OAAO,EAAE,CAAC","sourcesContent":["import { z } from 'zod';\n\n// Patient schemas\nexport const PatientSchema = z.object({\n  id: z.string().uuid(),\n  mrn: z.string().min(1), // Medical Record Number\n  firstName: z.string().min(1),\n  lastName: z.string().min(1),\n  dateOfBirth: z.string().regex(/^\\d{4}-\\d{2}-\\d{2}$/),\n  gender: z.enum(['Male', 'Female', 'Other', 'Unknown']),\n  email: z.string().email().optional(),\n  phone: z.string().optional(),\n  address: z.object({\n    street: z.string().optional(),\n    city: z.string().optional(),\n    state: z.string().optional(),\n    zipCode: z.string().optional(),\n    country: z.string().optional(),\n  }).optional(),\n  emergencyContact: z.object({\n    name: z.string(),\n    relationship: z.string(),\n    phone: z.string(),\n  }).optional(),\n  insuranceInfo: z.object({\n    provider: z.string(),\n    policyNumber: z.string(),\n    groupNumber: z.string().optional(),\n  }).optional(),\n  allergies: z.array(z.string()).optional(),\n  medications: z.array(z.string()).optional(),\n  conditions: z.array(z.string()).optional(),\n  createdAt: z.string(),\n  updatedAt: z.string(),\n  createdBy: z.string(), // Provider ID who created the record\n  lastModifiedBy: z.string(), // Provider ID who last modified\n});\n\nexport const PatientSearchSchema = z.object({\n  query: z.string().min(2), // Search by name, MRN, DOB\n  limit: z.union([z.string().regex(/^\\d+$/).transform(Number), z.number()]).optional().default(20),\n  nextToken: z.string().optional(),\n});\n\nexport const CreatePatientSchema = PatientSchema.omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n  createdBy: true,\n  lastModifiedBy: true,\n});\n\nexport const UpdatePatientSchema = CreatePatientSchema.partial();\n\n// Types\nexport type Patient = z.infer<typeof PatientSchema>;\nexport type PatientSearch = z.infer<typeof PatientSearchSchema>;\nexport type CreatePatientInput = z.infer<typeof CreatePatientSchema>;\nexport type UpdatePatientInput = z.infer<typeof UpdatePatientSchema>;\n\n// DynamoDB Patient entity\nexport interface PatientEntity extends Patient {\n  pk: string; // PATIENT#<patientId>\n  sk: string; // PROFILE\n  gsi1pk?: string; // MRN#<mrn>\n  gsi1sk?: string; // PATIENT#<patientId>\n  gsi2pk?: string; // PROVIDER#<providerId>\n  gsi2sk?: string; // PATIENT#<patientId>#<timestamp>\n  entityType: 'PATIENT';\n}"]}