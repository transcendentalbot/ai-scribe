{"version":3,"file":"get-transcripts.js","sourceRoot":"","sources":["../../../src/handlers/transcripts/get-transcripts.ts"],"names":[],"mappings":";;;AACA,gFAA4E;AAC5E,mDAAgD;AAEzC,MAAM,OAAO,GAAG,KAAK,EAC1B,KAA2B,EACK,EAAE;IAClC,IAAI,CAAC;QACH,MAAM,WAAW,GAAG,KAAK,CAAC,cAAc,EAAE,WAAW,CAAC;QAEtD,IAAI,CAAC,WAAW,EAAE,CAAC;YACjB,OAAO,mBAAQ,CAAC,KAAK,CAAC,0BAA0B,EAAE,GAAG,CAAC,CAAC;QACzD,CAAC;QAED,OAAO,CAAC,GAAG,CAAC,yDAAyD,WAAW,EAAE,CAAC,CAAC;QAEpF,MAAM,QAAQ,GAAG,MAAM,4CAAoB,CAAC,wBAAwB,CAAC,WAAW,CAAC,CAAC;QAElF,OAAO,CAAC,GAAG,CAAC,2BAA2B,QAAQ,CAAC,MAAM,sBAAsB,CAAC,CAAC;QAE9E,OAAO,mBAAQ,CAAC,OAAO,CAAC;YACtB,WAAW,EAAE,QAAQ;YACrB,KAAK,EAAE,QAAQ,CAAC,MAAM;SACvB,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,0BAA0B,EAAE,KAAK,CAAC,CAAC;QACjD,OAAO,mBAAQ,CAAC,KAAK,CAAC,6BAA6B,EAAE,GAAG,CAAC,CAAC;IAC5D,CAAC;AACH,CAAC,CAAC;AAxBW,QAAA,OAAO,WAwBlB","sourcesContent":["import { APIGatewayProxyEvent, APIGatewayProxyResult } from 'aws-lambda';\nimport { transcriptionService } from '../../services/transcription.service';\nimport { response } from '../../utils/response';\n\nexport const handler = async (\n  event: APIGatewayProxyEvent\n): Promise<APIGatewayProxyResult> => {\n  try {\n    const encounterId = event.pathParameters?.encounterId;\n    \n    if (!encounterId) {\n      return response.error('Encounter ID is required', 400);\n    }\n\n    console.log(`[get-transcripts] Fetching transcripts for encounter: ${encounterId}`);\n\n    const segments = await transcriptionService.getTranscriptionSegments(encounterId);\n    \n    console.log(`[get-transcripts] Found ${segments.length} transcript segments`);\n\n    return response.success({\n      transcripts: segments,\n      count: segments.length,\n    });\n  } catch (error) {\n    console.error('[get-transcripts] Error:', error);\n    return response.error('Failed to fetch transcripts', 500);\n  }\n};"]}