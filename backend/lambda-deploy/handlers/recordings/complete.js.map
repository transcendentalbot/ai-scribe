{"version":3,"file":"complete.js","sourceRoot":"","sources":["../../../src/handlers/recordings/complete.ts"],"names":[],"mappings":";;;AACA,mDAAgD;AAEzC,MAAM,OAAO,GAAG,KAAK,EAC1B,KAA2B,EACK,EAAE;IAClC,IAAI,CAAC;QACH,MAAM,WAAW,GAAG,KAAK,CAAC,cAAc,EAAE,WAAW,CAAC;QACtD,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC;QAE5C,IAAI,CAAC,WAAW,EAAE,CAAC;YACjB,OAAO,mBAAQ,CAAC,KAAK,CAAC,0BAA0B,EAAE,GAAG,CAAC,CAAC;QACzD,CAAC;QAED,OAAO,CAAC,GAAG,CAAC,4DAA4D,WAAW,EAAE,EAAE,IAAI,CAAC,CAAC;QAE7F,wDAAwD;QACxD,iEAAiE;QACjE,OAAO,mBAAQ,CAAC,OAAO,CAAC;YACtB,OAAO,EAAE,wDAAwD;YACjE,WAAW;YACX,IAAI;SACL,CAAC,CAAC;IACL,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACf,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;QACpD,OAAO,mBAAQ,CAAC,KAAK,CAAC,8BAA8B,EAAE,GAAG,CAAC,CAAC;IAC7D,CAAC;AACH,CAAC,CAAC;AAxBW,QAAA,OAAO,WAwBlB","sourcesContent":["import { APIGatewayProxyEvent, APIGatewayProxyResult } from 'aws-lambda';\nimport { response } from '../../utils/response';\n\nexport const handler = async (\n  event: APIGatewayProxyEvent\n): Promise<APIGatewayProxyResult> => {\n  try {\n    const encounterId = event.pathParameters?.encounterId;\n    const body = JSON.parse(event.body || '{}');\n\n    if (!encounterId) {\n      return response.error('Encounter ID is required', 400);\n    }\n\n    console.log(`[complete-recording] Completing recording for encounter: ${encounterId}`, body);\n\n    // This endpoint is for completing file-based recordings\n    // For now, return success as the logic will be implemented later\n    return response.success({\n      message: 'Recording completion endpoint - implementation pending',\n      encounterId,\n      body,\n    });\n  } catch (error) {\n    console.error('[complete-recording] Error:', error);\n    return response.error('Failed to complete recording', 500);\n  }\n};"]}