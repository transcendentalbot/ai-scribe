{"version":3,"file":"correlation-id.js","sourceRoot":"","sources":["../../src/middleware/correlation-id.ts"],"names":[],"mappings":";;AAMA,4CAWC;AAKD,4CAWC;AAhCD,+BAAoC;AAEpC;;GAEG;AACH,SAAgB,gBAAgB,CAAC,KAA2B;IAC1D,oDAAoD;IACpD,MAAM,aAAa,GACjB,KAAK,CAAC,OAAO,CAAC,kBAAkB,CAAC;QACjC,KAAK,CAAC,OAAO,CAAC,kBAAkB,CAAC;QACjC,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC;QAC7B,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC;QAC7B,KAAK,CAAC,OAAO,CAAC,iBAAiB,CAAC;QAChC,KAAK,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC;IAEnC,OAAO,aAAa,IAAI,IAAA,SAAM,GAAE,CAAC;AACnC,CAAC;AAED;;GAEG;AACH,SAAgB,gBAAgB,CAAC,KAA2B,EAAE,aAAqB;IACjF,OAAO;QACL,aAAa;QACb,SAAS,EAAE,KAAK,CAAC,cAAc,CAAC,SAAS;QACzC,QAAQ,EAAE,KAAK,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ;QAChD,SAAS,EAAE,KAAK,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS;QAClD,KAAK,EAAE,KAAK,CAAC,cAAc,CAAC,KAAK;QACjC,KAAK,EAAE,KAAK,CAAC,cAAc,CAAC,KAAK;QACjC,IAAI,EAAE,KAAK,CAAC,IAAI;QAChB,MAAM,EAAE,KAAK,CAAC,UAAU;KACzB,CAAC;AACJ,CAAC","sourcesContent":["import { APIGatewayProxyEvent } from 'aws-lambda';\nimport { v4 as uuidv4 } from 'uuid';\n\n/**\n * Extracts or generates a correlation ID for request tracing\n */\nexport function getCorrelationId(event: APIGatewayProxyEvent): string {\n  // Check various headers for existing correlation ID\n  const correlationId = \n    event.headers['X-Correlation-ID'] ||\n    event.headers['x-correlation-id'] ||\n    event.headers['X-Request-ID'] ||\n    event.headers['x-request-id'] ||\n    event.headers['X-Amzn-Trace-Id'] ||\n    event.headers['x-amzn-trace-id'];\n\n  return correlationId || uuidv4();\n}\n\n/**\n * Creates a context object with correlation ID for logging\n */\nexport function createLogContext(event: APIGatewayProxyEvent, correlationId: string) {\n  return {\n    correlationId,\n    requestId: event.requestContext.requestId,\n    sourceIp: event.requestContext.identity.sourceIp,\n    userAgent: event.requestContext.identity.userAgent,\n    apiId: event.requestContext.apiId,\n    stage: event.requestContext.stage,\n    path: event.path,\n    method: event.httpMethod,\n  };\n}"]}